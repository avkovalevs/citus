---
# tasks file for citus
- name: "Install apt package requirements"
  apt:
    pkg:  gpg-agent
    state: present
    update_cache: yes
  tags: pg

- name: "Add an Apt signing key, uses whichever key is at the URL"
  apt_key:
    url: "{{ item }}"
    state: present
  with_items:
    - https://repos.citusdata.com/community/gpgkey
    - https://www.postgresql.org/media/keys/ACCC4CF8.asc
  tags: pg

- name: "Add citus and pg apt repositories"
  apt_repository:
    repo: "{{ item }}"
    state: present
    update_cache: true
  with_items:
    - deb https://repos.citusdata.com/community/ubuntu/ {{ ansible_distribution_release }} main
    - deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main
  tags: pg

- name: "Check if any PG databases exists"
  stat:
    path: "{{ postgresql_data_path }}/13/main/PG_VERSION"
  register: pg_version
  tags: pg

- name: "Stop database processes if exists before delete"
  systemd:
    name: postgresql@13-main.service
    state: stopped
    enabled: false
  when: pg_version.stat.exists
  tags: pg

- name: "Delete citus and pg packages if exists"
  apt:
    pkg:  
    - postgresql-13
    - postgresql-contrib
    - postgresql-13-citus-9.5
    - postgresql-client-13
    state: absent
    purge: yes
    update_cache: true
  when: pg_version.stat.exists
  tags: pg

- name: "Make sure the postgres data directory does not exists"
  file:
    path: "{{ postgresql_data_path }}/13"
    owner: "{{ pg_user }}"
    group: "{{ pg_group }}"
    state: absent
    mode: 0700
  become: true
  when: pg_version.stat.exists
  tags: pg

- name: "Fresh install pg, citus, cstore_fdw packages"
  apt:
    pkg: 
    - postgresql-12
    - postgresql-12-citus-9.5
    - protobuf-c-compiler
    - libprotobuf-c-dev
    - postgresql-server-dev-12
    state: present
    update_cache: true
  tags: pg
  
- name: "Cstore | Create build dir"
  file:
    path: /tmp/cstore
    owner: root
    group: root
    state: directory
    mode: 0700
  tags: pg

- name: "Cstore | Clone cstore_fdw repo"
  git: 
    repo: 'https://github.com/citusdata/cstore_fdw.git'
    dest: /tmp/cstore
    clone: yes
  tags: pg

- name: "Cstore | Build and install cstore_fdw to PG12"
  shell: 
    chdir: /tmp/cstore 
    cmd: "PATH=/usr/lib/postgresql/12/bin:$PATH make && PATH=/usr/lib/postgresql/12/bin/:$PATH make install"
    executable: /bin/bash
  register: buildlog
  tags: pg

- debug:
    var: buildlog
  tags: pg

- name: "Add postgres user to sudoers"
  lineinfile:
    path: /etc/sudoers
    state: present
    line: 'postgres ALL=(ALL) NOPASSWD: ALL'
    validate: '/usr/sbin/visudo -cf %s'
  tags: pg

- name: PostgreSQL | Make sure the postgres data directory exists
  file:
    path: "{{ postgresql_data_path }}/12/citus"
    owner: "{{ pg_user }}"
    group: "{{ pg_group }}"
    state: directory
    mode: 0700
  become: true
  become_user: "{{ pg_user }}"
  tags: pg

- name: "Check if CITUS databases exists"
  stat:
    path: "{{ postgresql_data_path }}/12/citus/PG_VERSION"
  register: pgc_version
  tags: pg

- name: "Init PG cluster with citus and cstore_fdw extentions on 9700 port"
  shell: "{{ postgresql_bin_path }}/12/bin/initdb -D {{ postgresql_data_path }}/12/citus"
  args:
    executable: /bin/bash
  become: true
  become_user: "{{ pg_user }}"
  when: not pgc_version.stat.exists
  tags: pg
 
- name: "Change postgresql.conf"
  lineinfile:
    path: "{{ postgresql_data_path }}/12/citus/postgresql.conf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
  - { regexp: '^#listen_addresses =', line: "listen_addresses = '*'"}
  - { regexp: '^#shared_preload_libraries =', line: "shared_preload_libraries = 'citus,cstore_fdw'"}
  - { regexp: '^#port =', line: "port = 9700"}
  tags: pg

- name: "Copy pg_hba.conf to the targets"
  template:
    src: pg_hba.conf.j2
    dest: "{{ postgresql_data_path }}/12/citus/pg_hba.conf"
    owner: "{{ pg_user }}"
    group: "{{ pg_group }}"
  become: true
  become_user: "{{ pg_user }}"
  tags: pg

- name: "Enable and start PG service"
  systemd:
    name: postgresql-12
    enabled: yes
    state: restarted 
    daemon_reload: yes
  tags: pg

 
